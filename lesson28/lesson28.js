// Завдання 1 - Реализовать класс, описывающий окружность. В классе должны быть следующие компоненты:

class Circle {
    constructor(radius) {
        this.radius = 4; // 1.1 - поле, хранящее радиус окружности;
    }

    get radius() { // 1.2 - get-свойство, возвращающее радиус окружности;
        return this.radius;
    }

    set radius(radius) { // 1.3 - set-свойство, устанавливающее радиус окружности;
        this.radius = radius;
    }

    get diameter() { // 1.4 - get-свойство, возвращающее диаметр окружности;
        return this.calcLength() / Math.PI;
    }

    calcCircleArea() { // 1.5 - метод, вычисляющий площадь окружности;
        return Math.PI * (this.radius * this.radius);
    }

    calcLength() { // 1.6 - метод, вычисляющий длину окружности.
        return 2 * Math.PI * this.radius;
    }
}

// Продемонстрировать работу свойств и методов.


// Завдання 2 -  Реализовать класс, описывающий простой маркер. В классе должны быть следующие компоненты:

class Marker {
    constructor (color, count) {
        this.color = color; // 2.1 - поле, которое хранит цвет маркера;
        this.count = count; // 2.2 - поле, которое хранит количество чернил в маркере (в процентах);
    }
}

// 2.3 - метод для печати (метод принимает строку и выводит текст соответствующим цветом; текст выводится до тех пор, пока в маркере есть чернила; один не пробельный символ – это 0,5% чернил в маркере).

// 2.4 - Реализовать класс, описывающий заправляющийся маркер, унаследовав его от простого маркера и добавив метод для заправки маркера.
// Продемонстрировать работу написанных методов. 

/* Завдання 3 - Реализовать класс Employee, описывающий работника, и создать массив работников банка.

3.1 - Реализовать класс EmpTable для генерации HTML-кода таблицы со списком работников банка. Массив работников необходимо передавать через конструктор, а получать HTML-код с помощью метода getHtml().
3.2 - Создать объект класса EmpTable и вывести на экран результат работы метода getHtml(). */